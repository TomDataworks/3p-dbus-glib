<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY dbus-binding-tool SYSTEM "dbus-binding-tool.xml">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="dbus-glib-DBusGConnection">
<refmeta>
<refentrytitle role="top_of_page">DBusGConnection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>DBUS-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>DBusGConnection</refname>
<refpurpose>DBus Connection</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>
<refsect1>
<title>Stability Level</title>
Stable, unless otherwise indicated
</refsect1>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="DBusGConnection">DBusGConnection</link>;
<link linkend="DBusGConnection">DBusGConnection</link>*    <link linkend="dbus-g-bus-get">dbus_g_bus_get</link>                      (<link linkend="DBusBusType">DBusBusType</link> type,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="dbus-g-thread-init">dbus_g_thread_init</link>                  (void);
<link linkend="DBusGConnection">DBusGConnection</link>*    <link linkend="dbus-g-connection-open">dbus_g_connection_open</link>              (const <link linkend="gchar">gchar</link> *address,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="DBusGConnection">DBusGConnection</link>*    <link linkend="dbus-g-connection-ref">dbus_g_connection_ref</link>               (<link linkend="DBusGConnection">DBusGConnection</link> *connection);
<link linkend="void">void</link>                <link linkend="dbus-g-connection-unref">dbus_g_connection_unref</link>             (<link linkend="DBusGConnection">DBusGConnection</link> *connection);
<link linkend="void">void</link>                <link linkend="dbus-g-connection-flush">dbus_g_connection_flush</link>             (<link linkend="DBusGConnection">DBusGConnection</link> *connection);
<link linkend="DBusConnection">DBusConnection</link>*     <link linkend="dbus-g-connection-get-connection">dbus_g_connection_get_connection</link>    (<link linkend="DBusGConnection">DBusGConnection</link> *gconnection);
<link linkend="void">void</link>                <link linkend="dbus-g-connection-register-g-object">dbus_g_connection_register_g_object</link> (<link linkend="DBusGConnection">DBusGConnection</link> *connection,
                                                         const <link linkend="char">char</link> *at_path,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="GObject">GObject</link>*            <link linkend="dbus-g-connection-lookup-g-object">dbus_g_connection_lookup_g_object</link>   (<link linkend="DBusGConnection">DBusGConnection</link> *connection,
                                                         const <link linkend="char">char</link> *at_path);

</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
A <link linkend="DBusGConnection"><type>DBusGConnection</type></link> is a boxed type abstracting a DBusConnection.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="DBusGConnection" role="struct"/>DBusGConnection</title>
<indexterm><primary>DBusGConnection</primary></indexterm><programlisting>typedef struct _DBusGConnection DBusGConnection;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="dbus-g-bus-get" role="function"/>dbus_g_bus_get ()</title>
<indexterm><primary>dbus_g_bus_get</primary></indexterm><programlisting><link linkend="DBusGConnection">DBusGConnection</link>*    dbus_g_bus_get                      (<link linkend="DBusBusType">DBusBusType</link> type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Returns a connection to the given bus. The connection is a global variable
shared with other callers of this function.
</para>
<para>
(Internally, calls <link linkend="dbus-bus-get"><function>dbus_bus_get()</function></link> then calls
<link linkend="dbus-connection-setup-with-g-main"><function>dbus_connection_setup_with_g_main()</function></link> on the result.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> bus type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> address where an error can be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a DBusConnection
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-thread-init" role="function"/>dbus_g_thread_init ()</title>
<indexterm><primary>dbus_g_thread_init</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_thread_init                  (void);</programlisting>
<para>
Initializes the D-BUS thread system.
This function may only be called
once and must be called prior to calling any
other function in the D-BUS API.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-open" role="function"/>dbus_g_connection_open ()</title>
<indexterm><primary>dbus_g_connection_open</primary></indexterm><programlisting><link linkend="DBusGConnection">DBusGConnection</link>*    dbus_g_connection_open              (const <link linkend="gchar">gchar</link> *address,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Returns a connection to the given address.
</para>
<para>
(Internally, calls <link linkend="dbus-connection-open"><function>dbus_connection_open()</function></link> then calls
<link linkend="dbus-connection-setup-with-g-main"><function>dbus_connection_setup_with_g_main()</function></link> on the result.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara> address of the connection to open
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> address where an error can be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a DBusConnection
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-ref" role="function"/>dbus_g_connection_ref ()</title>
<indexterm><primary>dbus_g_connection_ref</primary></indexterm><programlisting><link linkend="DBusGConnection">DBusGConnection</link>*    dbus_g_connection_ref               (<link linkend="DBusGConnection">DBusGConnection</link> *connection);</programlisting>
<para>
Increment refcount on a <link linkend="DBusGConnection"><type>DBusGConnection</type></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the connection that was ref'd
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-unref" role="function"/>dbus_g_connection_unref ()</title>
<indexterm><primary>dbus_g_connection_unref</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_connection_unref             (<link linkend="DBusGConnection">DBusGConnection</link> *connection);</programlisting>
<para>
Decrement refcount on a <link linkend="DBusGConnection"><type>DBusGConnection</type></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-flush" role="function"/>dbus_g_connection_flush ()</title>
<indexterm><primary>dbus_g_connection_flush</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_connection_flush             (<link linkend="DBusGConnection">DBusGConnection</link> *connection);</programlisting>
<para>
Blocks until outgoing calls and signal emissions have been sent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="DBusGConnection"><type>DBusGConnection</type></link> to flush
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-get-connection" role="function"/>dbus_g_connection_get_connection ()</title>
<indexterm><primary>dbus_g_connection_get_connection</primary></indexterm><programlisting><link linkend="DBusConnection">DBusConnection</link>*     dbus_g_connection_get_connection    (<link linkend="DBusGConnection">DBusGConnection</link> *gconnection);</programlisting>
<para>
Get the <link linkend="DBusConnection"><type>DBusConnection</type></link> corresponding to this <link linkend="DBusGConnection"><type>DBusGConnection</type></link>.
The return value does not have its refcount incremented.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gconnection</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="DBusGConnection"><type>DBusGConnection</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="DBusConnection"><type>DBusConnection</type></link> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-register-g-object" role="function"/>dbus_g_connection_register_g_object ()</title>
<indexterm><primary>dbus_g_connection_register_g_object</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_connection_register_g_object (<link linkend="DBusGConnection">DBusGConnection</link> *connection,
                                                         const <link linkend="char">char</link> *at_path,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
Registers a <link linkend="GObject"><type>GObject</type></link> at the given path. Properties, methods, and signals
of the object can then be accessed remotely. Methods are only available
if method introspection data has been added to the object's class
with <link linkend="g-object-class-install-info"><function>g_object_class_install_info()</function></link>.
</para>
<para>
The registration will be cancelled if either the <link linkend="DBusConnection"><type>DBusConnection</type></link> or
the <link linkend="GObject"><type>GObject</type></link> gets finalized.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara> the D-BUS connection
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>at_path</parameter>&nbsp;:</term>
<listitem><simpara> the path where the object will live (the object's name)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> the object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="dbus-g-connection-lookup-g-object" role="function"/>dbus_g_connection_lookup_g_object ()</title>
<indexterm><primary>dbus_g_connection_lookup_g_object</primary></indexterm><programlisting><link linkend="GObject">GObject</link>*            dbus_g_connection_lookup_g_object   (<link linkend="DBusGConnection">DBusGConnection</link> *connection,
                                                         const <link linkend="char">char</link> *at_path);</programlisting>
<para>
FIXME</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="DBusGConnection"><type>DBusGConnection</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>at_path</parameter>&nbsp;:</term>
<listitem><simpara> path
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the object at path <parameter>at_path</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<link linkend="DBusConnection"><type>DBusConnection</type></link>
</refsect1>


<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
